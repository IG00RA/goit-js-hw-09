{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAmB,ICFV,MAGbC,cAAcC,EAAUC,GACtB,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbQ,cAAc,GDGVC,EAAO,CACXC,OAAQC,SAASC,cAAc,yBAC/BC,KAAMF,SAASC,cAAc,SAC7BZ,MAAOW,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAGjC,IAAII,EAAW,EA4BfP,EAAKI,KAAKI,iBAAiB,UA1BNC,IACnBA,EAAMC,iBACN,IAAIJ,EAASN,EAAKM,OAAOK,MACzB,MAAMN,EAAOO,OAAOZ,EAAKK,KAAKM,OAC9B,IAAIE,EAAQD,OAAOZ,EAAKT,MAAMoB,OAC9B,KAAOL,EAAS,GACdA,GAAU,EACVC,IACAnB,EACGC,cAAckB,EAAUM,GACxBC,MAAK,EAAGxB,SAAAyB,EAAQxB,MAAEA,MACjBL,EAAA8B,OAAOC,QAAQ,uBAAqBF,QAAiBxB,MAAU,IAEhE2B,OAAM,EAAG5B,SAAA6B,EAAQ5B,MAAEA,MAClBL,EAAA8B,OAAOI,QAAQ,sBAAoBD,QAAe5B,MAAU,IAEhEsB,GAASR,EAEXE,EAAW,EACXP,EAAKC,OAAOoB,UAAW,EACvBrB,EAAKI,KAAKkB,QACVxB,YAAW,KACTE,EAAKC,OAAOoB,UAAW,CAAK,GAC3B,IAAK","sources":["src/js/03-promises.js","src/js/promis-generator.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PromiseGenerator from './promis-generator';\nconst promiseGenerator = new PromiseGenerator();\n\nconst refs = {\n  button: document.querySelector('button[type=\"submit\"]'),\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nlet position = 0;\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  let amount = refs.amount.value;\n  const step = Number(refs.step.value);\n  let delay = Number(refs.delay.value);\n  while (amount > 0) {\n    amount -= 1;\n    position++;\n    promiseGenerator\n      .createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  position = 0;\n  refs.button.disabled = true;\n  refs.form.reset();\n  setTimeout(() => {\n    refs.button.disabled = false;\n  }, 2000);\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n","export default class PromiseGenerator {\n  constructor() {}\n\n  createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$promiseGenerator","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","constructor","$47d4ff9957288465$var$refs","button","document","querySelector","form","step","amount","$47d4ff9957288465$var$position","addEventListener","event","preventDefault","value","Number","delay1","then","position1","Notify","success","catch","position2","failure","disabled","reset"],"version":3,"file":"03-promises.f657d3c1.js.map"}